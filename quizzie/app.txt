import React, {useState,useEffect} from 'react'
import Intro from './Intro'
import Quiz from './Quiz'
import {nanoid} from 'nanoid'
export default function App() {
    // Two Pages State
    const [display, setDisplay] = useState(false)
    
    const [questions, setQuestions] = useState([])
    const [shuffled, setShuffled] = useState([])
    
    const [theAnswer, setTheAnswer] = useState({q:'',a:''})
    // Toggle Display
    function toggleDisplay() {
        setDisplay(true)
    }
    
    // API Call
    useEffect(() => {
        fetch('https://opentdb.com/api.php?amount=5&category=25&type=multiple')
        .then(res => res.json())
        .then(res =>setQuestions(res.results))

        return function () {
            console.log('instead of memory leak')
        }
    },[])
    
    
    
    // Put answers all together and shuffle them
    useEffect(() => {
        const shuffeledItems = questions.map(ele => ({...ele, allAnswers:shuffle([ele.correct_answer, ...ele.incorrect_answers])}))
        
            setShuffled(shuffeledItems)
            return function () {
              console.log('wait')  
            } 
    },[questions])
    
    
    
    
    // Shuffling function
    function shuffle(array) {
        let shuffledItems = []
        let usedIndexes = []
        let i = 0
        while (i < array.length) {
            let randomNumber =Math.floor(Math.random() * array.length)
            if(!usedIndexes.includes(randomNumber)) {
                shuffledItems.push(array[randomNumber])
                usedIndexes.push(randomNumber)
                i++
            }
        }
        return shuffledItems
    }
          
          
          
        // List All Questions With Answers
        const allQuestions = shuffled.map(ele => {
            return <Quiz
                    q={ele.question}
                    key={nanoid()}
                    ele={ele}
                    answerDetect={answerDetect}
                    allAns={ele.allAnswers.map(item => <p onClick={() => answerDetect(ele.question,item)} key={nanoid()} style={{backgroundColor:  'white' }}>{item}</p>)}
                    />
        })
          
          
        //   Answers function
        function answerDetect(question) {
            
                
            
            // setTheAnswer(prev => [...prev,  {a:question}])
            console.log(theAnswer)
            
        }
          
    return (
        <main>
        {!display ? 
        <Intro
        toggleDisplay={toggleDisplay}
         />
        :
        <>
        {allQuestions}
        </>
        }
        
        </main>
    )
}